I"t<p>이 게시글에서는 SLAM에서의 KF와 EKF를 기준으로 설명할 예정입니다.</p>
<h2 id="kalman-filter란">Kalman Filter란?</h2>
<p>칼만 필터는 현재 상태(state) $\mu$와 공분산(covariance) $\sum$를 기반으로 다음 상태를 추정하는 방법입니다. $\mu$와 $\sum$만으로 나타낼 수 있는 Gaussian 분포를 따르며, 지난 게시글의 <a href="https://refstop.github.io/uda-loc-markov.html">Bayesian Filter</a>와도 관계가 있습니다. 선형 칼만 필터를 설명하기 전에 가우시안 분포에 대해서 조금 설명하도록 하겠습니다.</p>

<h2 id="gaussian-분포">Gaussian 분포</h2>
<ul>
  <li>단일 변수 가우시안 분포</li>
</ul>

<center>$p(x)=\frac{1}{ \sqrt{2 \sigma^2 \pi}}e^{-\frac{(x-\mu)^2}{2\sigma^2}}$</center>

<ul>
  <li>다변수 가우시안 분포</li>
</ul>

<center>$p(x)=\frac{1}{ \sqrt{det(2\pi\sum)}}e^{-\frac{1}{2}(x-\mu)^T\sum^{-1}(x-\mu)}$</center>

<p>가우시안 분포는 단일 변수(single variable)과 다변수(multi variable)의 표현 방식이 있으며, SLAM 에서는 로봇의 현재 state를 벡터 $(x,y,\phi)$로 표시하기 때문에 다변수 가우시안 분포를 사용하는 것이 좋습니다.</p>

<h2 id="선형-모델의-가우시안-분포">선형 모델의 가우시안 분포</h2>
<p>일반적으로, 선형 모델은 다음과 같이 표현할 수 있습니다.</p>
<center>$Y=AX+B$</center>
<p>이때, $X$가 가우시안 분포를 따른다고 할 때, 확률은 다음과 같이 나타낼 수 있습니다.</p>
<center>$X \sim N(\mu_x, \sum_x)$</center>
<p>선형 변환 후의 확률변수 $Y$의 분포는 다음과 같습니다.</p>
<center>$Y \sim N(A\mu_x+B, A\sum_xA^T)$</center>

<h3 id="유도과정">유도과정</h3>
<p>$X$의 평균인 $\mu_x$의 선형변환 $\mu_y$는 직관적으로 이해되지만, 공분산 $\sum_y$는 조금 의문이 남습니다. 유도과정을 간단히 정리하겠습니다.</p>
<center> $\begin{align*} \mu_y &amp;= E((y-\mu_y)(y-\mu_y)^T) \\
&amp;= E((y-(A\mu_{x}+B))(y-(A\mu_{x}+B))^T) \\
&amp;= E(((AX+B)-(A\mu_{x}+B))((AX+B)-(A\mu_{x}+B))^T) \\
&amp;= E(\left [ A(X-\mu_x) \right ] \left [ A(X-\mu_x) \right ]^T) \\
&amp;= E( A(X-\mu_x)(X-\mu_x)^{T} A^T) \\
&amp;= AE((X-\mu_x)(X-\mu_x)^T)A^T \\
&amp;= A \sum_x A^T
\end{align*}$ </center>

<h2 id="선형-kalman-filter">선형 Kalman Filter</h2>
<p>선형 칼만 필터는 motion model과 observation model을 선형으로 가정합니다.</p>
<center> motion model: $x_t = A_tx_{t-1}+B_tu_t+\epsilon_t$ </center>
<center> observation model: $z_t = H_tx_t+\delta_t$ </center>
<ul>
  <li>$A_t$: control input $u_t$와 노이즈($\epsilon_t$)가 없을 때의 t-1과 t의 state 사이의 관계, n*n matrix</li>
  <li>$B_t$: control input $u_t$가 다음 state $x_t$에 어떤 영향을 미치는지를 나타낸 matrix, n*l matrix</li>
  <li>$H_t$: 현재 로봇의 상태를 나타내는 state $x_t$와 센서의 관측 정보(observation)의 관계, k*n matrix</li>
  <li>$\epsilon_t,\;\delta_t$: 평균이 0이며 공분산이 각각 $R_t,\;Q_t$인 확률변수, 가우시안 표준정규분포를 따름.<br />
따라서 이를 가우시안 분포 공식에 적용하면, Bayesian Filter의 motion model과 observation model 확률을 구할 수 있습니다.</li>
  <li>Motion model</li>
</ul>
<center>$p(x_t|u_t,x_{t-1})=\frac{1}{ \sqrt{det(2\pi R_t)}}e^{-\frac{1}{2}(x-A_tx_{t-1}-B_tu_t)^TR_t^{-1}(x-A_tx_{t-1}-B_tu_t)}$</center>
<ul>
  <li>Observation model</li>
</ul>
<center>$p(z_t|x_t)=\frac{1}{ \sqrt{det(2\pi Q_t)}}e^{-\frac{1}{2}(x-H_tx_t)^TR_t^{-1}(x-H_tx_t)}$</center>
<p>Motion model은 prediction step에서, Observation model은 correction step에 적용됩니다.</p>
<ul>
  <li>Prediction step</li>
</ul>
<center>$/overline{bel}(x_t)=\int_{x_{t-1}}p(x_t|u_t,x_{t-1})bel(x_{t-1})dx_{t-1}$</center>
<ul>
  <li>Correction step</li>
</ul>
<center>$bel(x_t) = \eta p(z_t|x_t)/bar{bel}(x_t)$</center>
<p>t에서의 state 확률 $/bar{bel}(x_t)$은 motion model에 의해 결정되고(prediction step), prediction step에서 계산된 t에서의 state 확률$/bar{bel}(x_t)$은 observation model에 의해서 보정됩니다.<br />
이때, 모든 확률 분포를 Gaussian 확률 분포를 따른다고 가정하는 모델이 바로 Kalman Filter입니다. Gaussian 분포를 따른다고 가정하면 간단히 평균 $\mu$과 분산(공분산) $\sigma(\sum)$로 표시하기 때문에 두개의 파라미터만으로 확률분포를 표현할 수 있는 장점이 있습니다. Kalman Filter 알고리즘은 다음과 같습니다.</p>
<center>
$\begin{align*} 1&amp;: Kalman filter(\mu_t{t-1}, \sum_{t-1}, u_t, z_t) \\
&amp;[Prediction\;step]
\end{align*}
</center>

:ET