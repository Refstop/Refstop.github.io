I"]<h2 id="사용해본-git-명령어-정리">사용해본 git 명령어 정리</h2>

<p>git init : git 공간 만들기<br />
git clone : git repository로부터 다운로드(깃 공간까지)<br />
git add . : 깃 공간의 변경사항 전부 추가(저장후보) (잘몰겟음)<br />
git commit -m ‘(커밋 메시지)’ : git add로 추가한 내용들 local에 업로드<br />
git push : local -&gt; remote로 업로드<br />
git status : 깃 공간의 현재상태(커밋내용, 현재 브랜치 등)<br />
git branch : 현재 깃 공간(local)의 브랜치 보기<br />
git log : 현재 브랜치의 커밋 목록들 보기(q 누르면 종료, enter 누르면 계속 보여줌)<br />
-v : 브랜치 상세정보, 마지막 커밋 메시지 확인<br />
-r : 리모트 공간의 브랜치 보기<br />
-a : 로컬, 리모트 브랜치 다 보기<br />
–delete, -d (브랜치명) : local 브랜치 삭제<br />
작업된 사항이나 commit 한 이력이 남아있는 경우, branch가 삭제되지 않는 경우<br />
-D (브랜치명) : 브랜치 강제 삭제 « 이걸로 삭제 (추천x)<br />
-m (현재 브랜치명) (바꿀 브랜치명) : 브랜치 이름 변경<br />
git push origin –delete (브랜치명) : remote 브랜치 삭제<br />
git checkout (브랜치명) : 브랜치로 이동<br />
git checkout -b (new 브랜치명) : 브랜치를 생성하고 이동<br />
git push –set-upstream origin (new 브랜치명) : 새로 생성된 브랜치를 리모트에 연결할 때 사용<br />
이거 해야지 git push로 그냥 업로드 할수 있음, 생성하고 처음 한번만 하면됨<br />
git push -u origin (new 브랜치명) « 이것도 업스트림과 똑같은 명령어<br />
git merge (다른 브랜치) : 현재 브랜치에 다른 브랜치를 병합, 이때 병합되는건 최근 commit 기준</p>

<p>계속 새로 업데이트 예정</p>

:ET